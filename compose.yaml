version: '3'
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_HOST_NAME: 'kafka'
      KAFKA_LISTENERS: 'INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092,CONTROLLER://kafka:9093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:29092", "--list" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8090:8090"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: kraft-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      SERVER_PORT: 8090
    networks:
      - kafka-net

  dispatch-service:
    build: 
      context: ./dispatch-service
    container_name: dispatch-service
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - kafka-net
        
  tracking-service:
    build:
      context: ./tracking-service
    container_name: tracking-service
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    networks:
      - kafka-net

volumes:
  kafka_data:

networks:
  kafka-net:
    driver: bridge
